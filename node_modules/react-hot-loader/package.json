{
  "_args": [
    [
      {
        "raw": "react-hot-loader@4.1.3",
        "scope": null,
        "escapedName": "react-hot-loader",
        "name": "react-hot-loader",
        "rawSpec": "4.1.3",
        "spec": "4.1.3",
        "type": "version"
      },
      "/Users/rad182/Projects/repository/hello-next/node_modules/next"
    ]
  ],
  "_from": "react-hot-loader@4.1.3",
  "_id": "react-hot-loader@4.1.3",
  "_inCache": true,
  "_location": "/react-hot-loader",
  "_nodeVersion": "9.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-hot-loader_4.1.3_1525812320956_0.5940552445188028"
  },
  "_npmUser": {
    "name": "neoziro",
    "email": "berge.greg@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "fbjs": "0.8.16",
    "loose-envify": "1.3.1",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "react-hot-loader@4.1.3",
    "scope": null,
    "escapedName": "react-hot-loader",
    "name": "react-hot-loader",
    "rawSpec": "4.1.3",
    "spec": "4.1.3",
    "type": "version"
  },
  "_requiredBy": [
    "/next"
  ],
  "_resolved": "https://registry.npmjs.org/react-hot-loader/-/react-hot-loader-4.1.3.tgz",
  "_shasum": "b4ceca7961cc08451f8199a24a5753a749edd9ce",
  "_shrinkwrap": null,
  "_spec": "react-hot-loader@4.1.3",
  "_where": "/Users/rad182/Projects/repository/hello-next/node_modules/next",
  "author": {
    "name": "Dan Abramov"
  },
  "bugs": {
    "url": "https://github.com/gaearon/react-hot-loader/issues"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/react-hot-loader"
  },
  "dependencies": {
    "fast-levenshtein": "^2.0.6",
    "global": "^4.3.0",
    "hoist-non-react-statics": "^2.5.0",
    "prop-types": "^15.6.1",
    "react-lifecycles-compat": "^3.0.2",
    "shallowequal": "^1.0.2"
  },
  "description": "Tweak React components in real time.",
  "devDependencies": {
    "babel-cli": "^6.7.5",
    "babel-core": "^6.26.3",
    "babel-eslint": "^8.2.3",
    "babel-jest": "^22.4.3",
    "babel-plugin-dynamic-import-node": "^1.2.0",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-react": "^6.5.0",
    "codecov": "^3.0.1",
    "conventional-github-releaser": "^2.0.2",
    "create-react-class": "^15.6.3",
    "cross-env": "^5.1.4",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-15": "^1.0.5",
    "enzyme-adapter-react-16": "^1.1.1",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^16.0.0",
    "eslint-config-prettier": "^2.6.0",
    "eslint-plugin-import": "^2.11.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.7.0",
    "husky": "^0.14.3",
    "jest": "^22.4.3",
    "lint-staged": "^7.1.0",
    "prettier": "^1.12.1",
    "react": "^16.3.2",
    "react-dom": "^16.3.2",
    "react-mount": "^0.1.3",
    "react-test-renderer": "16.3.2",
    "recompose": "^0.27.0",
    "rimraf": "^2.5.2",
    "rollup": "^0.58.2",
    "rollup-plugin-babel": "^3.0.4",
    "rollup-plugin-commonjs": "^9.1.3",
    "rollup-plugin-json": "^2.3.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-uglify": "^3.0.0",
    "standard-version": "^4.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-CF3Y/qUfL1PkM6TPrELNsSiHGKJFRnpyLdzsk+HV4IIuQAY2g1aZXQmK4L/O8WOaldoOujxAYfRfpzrWTvmvtg==",
    "shasum": "b4ceca7961cc08451f8199a24a5753a749edd9ce",
    "tarball": "https://registry.npmjs.org/react-hot-loader/-/react-hot-loader-4.1.3.tgz",
    "fileCount": 12,
    "unpackedSize": 103263,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8gxiCRA9TVsSAnZWagAA6pYP/Rr4yqJ6EOI4qElMy8NG\nEns9VCIhqNTz3WRa37SFRG7USA8XTaC8lZO6FzeQ2yw6/MdTv7tcm/hjUF4U\nv+DvXYoKk+5Od4WEsrYRQtd4GmVJ7BB+xllG7JILHUmIrtwYmsGZUrBlVxFy\nD4htpSacByoaumvkVC/f8m7agnNfCYAZpwITGo6D5bfFHOr75Wbg7R1kWk/p\n8pJ7TYgehvXnqL1PBC3QqbwH1GWViTbRCDnX2KX/5qqANSKb7MkO07hXg4L/\neY3J63BhyAHULzEjHBjlNhNBPCu8fZygFrHqX7pn06lnlkT4UgwyRwN0Eumy\n7CiHbL8DSwz0aB4QI4gPyHZmbvqy6D5zytAouqgRiQout2gtRlIJ2ZiwknTN\nDWh5ESQ7jOHNhwwiQHTwUrsN9J0Qq5nhPoU6NuNNYIZgsXOOoqV7H43xr5MC\nJ/NEVVtICKQZKIctw3BqBbirFh8Xl9t8hBWUvuNdOMbWNz0t4Kmz+6Ibs+1z\nE3ZVtvV5+iyqO2cwZI1mQ/FeolxfUmzkU3mStHln/MnqOjlB8ZmwiQDMDndY\n1w1xRbZEWoYtquAWt4FXpM0jvUI2EyetbO47j4Fs01lvU+2t6vgdP+NswXI/\ngV4C2ADODWB33M9ZU7+2hFvX89HdsC9X+4/nSaQXr5yGrHebKjXPK15eN25I\njA0H\r\n=0vZv\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "files": [
    "dist",
    "index.js",
    "babel.js",
    "patch.js",
    "react-hot-loader.d.ts"
  ],
  "gitHead": "323389a9c72f7738ae61ef829ea88e6c0faff8f1",
  "homepage": "https://github.com/gaearon/react-hot-loader",
  "jest": {
    "moduleDirectories": [
      "node_modules",
      "<rootDir>"
    ],
    "setupFiles": [
      "<rootDir>/testConfig/setupTests.js"
    ],
    "transform": {
      "^.+\\.js$": "<rootDir>/testConfig/babel.js"
    }
  },
  "keywords": [
    "react",
    "javascript",
    "webpack",
    "hmr",
    "livereload",
    "live",
    "edit",
    "hot",
    "loader",
    "reload"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,md,ts,json}": [
      "prettier --write",
      "git add"
    ]
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "calesce",
      "email": "newman.cale@gmail.com"
    },
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    },
    {
      "name": "kashey",
      "email": "thekashey@gmail.com"
    },
    {
      "name": "montogeek",
      "email": "montogeek@gmail.com"
    },
    {
      "name": "neoziro",
      "email": "berge.greg@gmail.com"
    },
    {
      "name": "wkwiatek",
      "email": "wojtek.kwiatek@gmail.com"
    }
  ],
  "name": "react-hot-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0 || ^16.0.0"
  },
  "readme": "# React Hot Loader\n\n[![Build Status][build-badge]][build] [![version][version-badge]][package]\n[![Code Coverage][coverage-badge]][coverage]\n[![MIT License][license-badge]][license]\n\n[![PRs Welcome][prs-badge]][prs] [![Chat][chat-badge]][chat]\n[![Backers on Open Collective][oc-backer-badge]](#backers)\n[![Sponsors on Open Collective][oc-sponsor-badge]](#sponsors)\n\n[![Watch on GitHub][github-watch-badge]][github-watch]\n[![Star on GitHub][github-star-badge]][github-star]\n\nTweak React components in real time ⚛️⚡️\n\nWatch\n**[Dan Abramov's talk on Hot Reloading with Time Travel](https://www.youtube.com/watch?v=xsSnOQynTHs).**\n\n## Install\n\n```\nnpm install react-hot-loader\n```\n\n> Note: You can safely install react-hot-loader as a regular dependency instead\n> of a dev dependency as it automatically ensures it is not executed in\n> production and the footprint is minimal.\n\n## Getting started\n\n1.  Add `react-hot-loader/babel` to your `.babelrc`:\n\n```js\n// .babelrc\n{\n  \"plugins\": [\"react-hot-loader/babel\"]\n}\n```\n\n2.  Mark your root component as _hot-exported_:\n\n```js\n// App.js\nimport React from 'react'\nimport { hot } from 'react-hot-loader'\n\nconst App = () => <div>Hello World!</div>\n\nexport default hot(module)(App)\n```\n\n3.  [Run Webpack with Hot Module Replacement](https://webpack.js.org/guides/hot-module-replacement/#enabling-hmr):\n\n```sh\nwebpack-dev-server --hot\n```\n\n## Recipes\n\n### Migrating from [create-react-app](https://github.com/facebookincubator/create-react-app)\n\n1.  Run `npm run eject`\n2.  Install React Hot Loader (`npm install --save-dev react-hot-loader`)\n3.  In `config/webpack.config.dev.js`, add `'react-hot-loader/babel'` to Babel\n    loader configuration. The loader should now look like:\n\n```js\n  {\n    test: /\\.(js|jsx)$/,\n    include: paths.appSrc,\n    loader: require.resolve('babel-loader'),\n    options: {\n      // This is a feature of `babel-loader` for Webpack (not Babel itself).\n      // It enables caching results in ./node_modules/.cache/babel-loader/\n      // directory for faster rebuilds.\n      cacheDirectory: true,\n      plugins: ['react-hot-loader/babel'],\n    },\n  }\n```\n\n4.  Mark your App (`src/index.js`) as _hot-exported_:\n\n```js\n// ./containers/App.js\nimport React from 'react'\nimport { hot } from 'react-hot-loader'\n\nconst App = () => <div>Hello World!</div>\n\nexport default hot(module)(App)\n```\n\n### Migrating from [create-react-app](https://github.com/facebookincubator/create-react-app) without ejecting\n\nUsers [report](https://github.com/gaearon/react-hot-loader/pull/729#issuecomment-354097936), that it is possible to use [react-app-rewire-hot-loader](https://github.com/cdharris/react-app-rewire-hot-loader) to setup React-hot-loader without ejecting.\nFollow [these code examples](https://github.com/Grimones/cra-rhl/commit/4ed74af2dc649301695f67df05a12f210fb7820c) to repeat the approach.\n\n### TypeScript\n\nWhen using TypeScript, Babel is not required, but React Hot Loader will not work (properly) without it.\nJust add `babel-loader` into your Webpack configuration, with React Hot Loader plugin.\n\nThere are 2 different ways to do it.\n\n##### Add babel AFTER typescript.\n\n```js\n{\n  test: /\\.tsx?$/,\n  use: [\n    {\n      loader: 'babel-loader',\n      options: {\n        babelrc: false,\n        plugins: ['react-hot-loader/babel'],\n      },\n    },\n    'ts-loader', // (or awesome-typescript-loader)\n  ],\n}\n```\n\nIn this case you have to modify your `tsconfig.json`, and compile to ES6 mode, as long as React-Hot-Loader babel plugin does not understand ES5 code.\n\n```json\n// tsconfig.json\n{\n  \"module\": \"commonjs\",\n  \"target\": \"es6\"\n}\n```\n\nAs long you cannot ship ES6 to production, you can create a `tsconfig.dev.json`, \"extend\" the base tsconfig and use \"dev\" config in dev webpack build\n. Details\nfor [ts-loader](https://github.com/TypeStrong/ts-loader#configfile-string-defaulttsconfigjson)\n, for [awesome-typescript-loader](https://github.com/s-panferov/awesome-typescript-loader#configfilename-string-defaulttsconfigjson).\n\n```json\n{\n  \"extends\": \"./tsconfig\",\n  \"compilerOptions\": {\n    \"target\": \"es6\"\n  }\n}\n```\n\nKeep in mind - awesome-typescript-loader [has a built in feature](https://github.com/s-panferov/awesome-typescript-loader#usebabel-boolean-defaultfalse) (`useBabel`) to _babelify_ result.\n\n##### Add babel BEFORE typescript\n\n> Note: this way requires babel 7 and [babel-loader@^8.0.0](https://github.com/babel/babel-loader#install)\n\n```js\n{\n  test: /\\.tsx?$/,\n  use: [\n    'ts-loader', // (or awesome-typescript-loader)\n    {\n      loader: 'babel-loader',\n      options: {\n        plugins: [\n          '@babel/plugin-syntax-typescript',\n          '@babel/plugin-syntax-decorators',\n          '@babel/plugin-syntax-jsx',\n          'react-hot-loader/babel',\n        ],\n      },\n    }\n  ],\n}\n```\n\nIn this case you can compile to ES5. More about [typescript and react-hot-loader](https://github.com/gaearon/react-hot-loader/issues/884)\n\nWe also have a [full example running TypeScript + React Hot Loader](https://github.com/gaearon/react-hot-loader/tree/master/examples/typescript).\n\n### Parcel\n\nParcel supports Hot Module Reloading out of the box, just follow step 1 and 2 of [Getting Started](https://github.com/gaearon/react-hot-loader/tree/master#getting-started).\n\nWe also have a [full example running Parcel + React Hot Loader](https://github.com/gaearon/react-hot-loader/tree/master/examples/parcel).\n\n### Electron\n\n1.  Add `react-hot-loader/babel` to your `.compilerc`:\n\n```js\n// .compilerc\n{\n  \"plugins\": [\"react-hot-loader/babel\"]\n}\n```\n\n2.  Enable Live Reload in the project\n\n```js\nenableLiveReload({ strategy: 'react-hmr' })\n```\n\nSee a [complete example](https://github.com/rllola/hmr-example-issue-2/blob/master/src/index.js).\n\n### Source Maps\n\nIf you use `devtool: 'source-map'` (or its equivalent), source maps will be\nemitted to hide hot reloading code.\n\nSource maps slow down your project. Use `devtool: 'eval'` for best build\nperformance.\n\nHot reloading code is just one line in the beginning and one line at the end of\neach module so you might not need source maps at all.\n\n### React Native\n\nReact Native\n**[supports hot reloading natively](https://facebook.github.io/react-native/blog/2016/03/24/introducing-hot-reloading.html)**\nas of version 0.22.\n\nUsing React Hot Loader with React Native can cause unexpected issues (see #824) and is not recommended.\n\n### Code Splitting\n\nMost of modern React component-loader libraries are not \"100%\" compatible with React-Hot-Loader, as long\nthey load deferred component on `componentWillMount`, but never reload it again.\nAs result - you can update the code, webpack will ship that code the the client, but nothing will be updated.\n\nIn this case, you have to setup \"reloading\" by your self - you have to mark your \"loaded components\" as _hot-exported_.\n\nExample using [react-async-component](https://github.com/ctrlplusb/react-async-component)...)\n\n```js\n// AsyncHello.js\nimport asyncComponent from 'react-async-component'\nconst AsyncHello = asyncComponent({\n  resolve: () => import('./Hello.js'),\n})\n\n// Hello.js\nimport { hot } from 'react-hot-loader'\nconst Hello = () => 'Hello'\nexport default hot(module)(Hello) // <-- module will reload itself\n```\n\nMarking component as `hot` will make it self-reloadable. But this require altering your code, and sometimes\nis not possible.\n\nFor a better expirence you could use more React-Hot-Loader \"compatible\" loaders:\n\n* [loadable-components](https://github.com/smooth-code/loadable-components/) - always reloads and preloads component in development.\n* [react-imported-component](https://github.com/theKashey/react-imported-component) - reloads component on HMR (React 16.3 compatible).\n* [react-universal-component](https://github.com/faceyspacey/react-universal-component) - reloads component on HMR.\n\n### Checking Element `type`s\n\nBecause React Hot Loader creates proxied versions of your components, comparing\nreference types of elements won't work:\n\n```js\nconst element = <Component />\nconsole.log(element.type === Component) // false\n```\n\nReact Hot Loader exposes a function `areComponentsEqual` to make it possible:\n\n```js\nimport { areComponentsEqual } from 'react-hot-loader'\nconst element = <Component />\nareComponentsEqual(element.type, Component) // true\n```\n\n### Webpack ExtractTextPlugin\n\nWebpack ExtractTextPlugin is not compatible with React Hot Loader. Please disable it in development:\n\n```js\nnew ExtractTextPlugin({\n  filename: 'styles/[name].[contenthash].css',\n  disable: NODE_ENV !== 'production',\n})\n```\n\n## API\n\n### `hot(module, options)`\n\nMark a component as hot.\n\n```js\nimport { hot } from 'react-hot-loader'\n\nconst App = () => 'Hello World!'\n\nexport default hot(module)(App)\n```\n\n### `AppContainer`\n\nMark application as hot reloadable. Prefer using `hot` helper.\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\nimport App from './containers/App'\n\nconst render = Component => {\n  ReactDOM.render(\n    <AppContainer>\n      <Component />\n    </AppContainer>,\n    document.getElementById('root'),\n  )\n}\n\nrender(App)\n\n// Webpack Hot Module Replacement API\nif (module.hot) {\n  module.hot.accept('./containers/App', () => {\n    // if you are using harmony modules ({modules:false})\n    render(App)\n    // in all other cases - re-require App manually\n    render(require('./containers/App'))\n  })\n}\n```\n\n### areComponentsEqual(Component1, Component2)\n\nTest if two components have the same type.\n\n```js\nimport { areComponentsEqual } from 'react-hot-loader'\nimport Component1 from './Component1'\nimport Component2 from './Component2'\n\nareComponentsEqual(Component1, Component2) // true or false\n```\n\n### setConfig(config)\n\nSet a new configuration for React Hot Loader.\n\nAvailable options are:\n\n* `logLevel`: specify log level, default to `\"error\"`, available values are: `['debug', 'log', 'warn', 'error']`\n\n```js\nimport { setConfig } from 'react-hot-loader'\n\nsetConfig({ logLevel: 'debug' })\n```\n\n## Migrating from v3\n\n### AppContainer vs hot\n\nPrior v4 the right way to setup React Hot Loader was to wrap your Application\nwith `AppContainer`, set setup module acceptance by yourself. This approach is\nstill valid but only for advanced use cases, prefer using `hot` helper.\n\n**React Hot Loader v3:**\n\n```js\n// App.js\nimport React from 'react'\n\nconst App = () => <div>Hello world!</div>\n\nexport default App\n```\n\n```js\n// main.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\nimport App from './containers/App'\n\nconst render = Component => {\n  ReactDOM.render(\n    <AppContainer>\n      <Component />\n    </AppContainer>,\n    document.getElementById('root'),\n  )\n}\n\nrender(App)\n\n// Webpack Hot Module Replacement API\nif (module.hot) {\n  module.hot.accept('./containers/App', () => {\n    // if you are using harmony modules ({modules:false})\n    render(App)\n    // in all other cases - re-require App manually\n    render(require('./containers/App'))\n  })\n}\n```\n\n**React Hot Loader v4:**\n\n```js\n// App.js\nimport React from 'react'\nimport { hot } from 'react-hot-loader'\n\nconst App = () => <div>Hello world!</div>\n\nexport default hot(module)(App)\n```\n\n```js\n// main.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n```\n\n### No patch required\n\nCode is automatically patched, you can safely remove `react-hot-loader/patch`\nfrom your Webpack config.\n\n### Error reporter is gone\n\nReact supports error handling out of the box since v16 using `componentDidCatch`. You can create your own [Error Boundary](https://reactjs.org/docs/error-boundaries.html#introducing-error-boundaries) and install it after `hot` has been applied:\n\n```js\nimport React from 'react'\nimport { hot } from 'react-hot-loader'\nimport ErrorBoundary from './ErrorBoundary'\n\nconst App = () => (\n  <ErrorBoundary>\n    <div>Hello world!</div>\n  </ErrorBoundary>\n)\n\nexport default hot(module)(App)\n```\n\n## Known limitations and side effects\n\n### Not about `hot`\n\n`hot` accepts only React Component (Stateful or Stateless), resulting the `HotExported` variant of it.\nThe `hot` function will setup current module to _self-accept_ itself on reload, and will **ignore** all the changes, made for non-React components.\nYou may mark as many modules as you want. But `HotExportedComponent` **should be the only used export** of a _hot_-module.\n\n> Note: Please note how often we have used `exported` keyword. `hot` is for exports.\n\n> Note: Does nothing in production mode, just passes App through.\n\n### New Components keep executing the old code\n\nThere is no way to hot-update constructor code, as result even new components\nwill be born as the first ones, and then grow into the last ones. As of today, this issue cannot be solved.\n\n## Troubleshooting\n\nIf it doesn't work, in 99% of cases it's a configuration issue. A missing option, a\nwrong path or port. Webpack is very strict about configuration, and the best way\nto find out what's wrong is to compare your project to an already working setup,\ncheck out\n**[examples](https://github.com/gaearon/react-hot-loader/tree/master/examples)**,\nbit by bit.\n\nIf something doesn't work, in 99% of cases it's an issue with your code. The Component\ndidn't get registered, due to HOC or Decorator around it, which is making it\ninvisible to the Babel plugin or Webpack loader.\n\nWe're also gathering\n**[Troubleshooting Recipes](https://github.com/gaearon/react-hot-loader/blob/master/docs/Troubleshooting.md)**\nso send a PR if you have a lesson to share!\n\n### Switch into debug mode\n\nDebug mode adds additional warnings and can tells you why React Hot Loader is\nnot working properly in your application.\n\n```js\nimport { setConfig } from 'react-hot-loader'\nsetConfig({ logLevel: 'debug' })\n```\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [Contribute](CONTRIBUTING.md).\n[![contributors][oc-contributors-img]](https://github.com/gaearon/react-hot-loader/graphs/contributors)\n\n## Backers\n\nThank you to all our backers! 🙏 [Become a backer][oc-backer-link]\n[![backers][oc-backer-img]][oc-backer-link]\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor][oc-sponsor-link]\n\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-hot-loader/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-hot-loader/sponsor/9/avatar.svg\"></a>\n\n## License\n\nMIT\n\n[build-badge]: https://img.shields.io/travis/gaearon/react-hot-loader.svg?style=flat-square\n[build]: https://travis-ci.org/gaearon/react-hot-loader\n[coverage-badge]: https://img.shields.io/codecov/c/github/gaearon/react-hot-loader.svg?style=flat-square\n[coverage]: https://codecov.io/github/gaearon/react-hot-loader\n[version-badge]: https://img.shields.io/npm/v/react-hot-loader.svg?style=flat-square\n[package]: https://www.npmjs.com/package/react-hot-loader\n[license-badge]: https://img.shields.io/npm/l/react-hot-loader.svg?style=flat-square\n[license]: https://github.com/gaearon/react-hot-loader/blob/next/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[chat]: https://gitter.im/gaearon/react-hot-loader\n[chat-badge]: https://img.shields.io/gitter/room/gaearon/react-hot-loader.svg?style=flat-square\n[github-watch-badge]: https://img.shields.io/github/watchers/gaearon/react-hot-loader.svg?style=social\n[github-watch]: https://github.com/gaearon/react-hot-loader/watchers\n[github-star-badge]: https://img.shields.io/github/stars/gaearon/react-hot-loader.svg?style=social\n[github-star]: https://github.com/gaearon/react-hot-loader/stargazers\n[oc-backer-badge]: https://opencollective.com/react-hot-loader/backers/badge.svg\n[oc-sponsor-badge]: https://opencollective.com/react-hot-loader/sponsors/badge.svg\n[oc-contributors-img]: https://opencollective.com/react-hot-loader/contributors.svg?width=890&button=false\n[oc-backer-img]: https://opencollective.com/react-hot-loader/backers.svg?width=890\n[oc-backer-link]: https://opencollective.com/react-hot-loader#backers\n[oc-sponsor-link]: https://opencollective.com/react-hot-loader#sponsor\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gaearon/react-hot-loader.git"
  },
  "scripts": {
    "build": "rollup -c",
    "ci": "scripts/ci.sh",
    "format": "prettier --write \"**/*.{js,md,ts,json}\" *.{js,md,ts,json}",
    "lint": "eslint .",
    "prebuild": "rm -rf dist",
    "precommit": "lint-staged",
    "prepublishOnly": "yarn build",
    "release": "standard-version && conventional-github-releaser -p angular",
    "test": "yarn test:es2015 && yarn test:modern",
    "test:es2015": "cross-env BABEL_TARGET=es2015 jest --no-cache",
    "test:modern": "cross-env BABEL_TARGET=modern jest --no-cache"
  },
  "types": "react-hot-loader.d.ts",
  "version": "4.1.3"
}
